#!/usr/bin/python
#
# 1D Sod Tube Test
#
# Warning: The data generated by this program has not
#          been validated very well.
#

import numpy as np


it = 100 # iteration, which is integer
dt = 0.004
dx = 0.01
ga = 1.4

rhol = 1.0
ul = 0.0
pl = 1.0
rhor = 0.125
ur = 0.0
pr = 0.1

ia = 1

mtxq = np.asmatrix(np.zeros(shape=(3,1000)))
mtxqn = np.asmatrix(np.zeros(shape=(3,1000)))
mtxqx = np.asmatrix(np.zeros(shape=(3,1000)))
mtxqt = np.asmatrix(np.zeros(shape=(3,1000)))
mtxs = np.asmatrix(np.zeros(shape=(3,1000)))
vxl = np.zeros(shape=(3,1))
vxr = np.zeros(shape=(3,1))
xx = np.zeros(shape=(1000))

mtxf = np.asmatrix(np.zeros(shape=(3,3)))

hdt = dt/2.0
qdt = dt/4.0 #q:quad
hdx = dx/2.0
qdx = dx/4.0

tt = hdt*it
dtx = dt/dx

a1 = ga - 1.0
a2 = 3.0 - ga
a3 = a2/2.0
a4 = 1.5*a1
mtxq[0][0] = rhol
mtxq[1][0] = rhol*ul
mtxq[2][0] = pl/a1 + 0.5*rhol*ul**2.0
itp = it + 1
for i in xrange(itp):
    mtxq[0,i+1] = rhor
    mtxq[1,i+1] = rhor*ur
    mtxq[2,i+1] = pr/a1 + 0.5*rhor*ur**2.0
    # this was done by qx = np.zeros(shape=(3,1000))
    # for j in xrange(3):
    #     qx[j][i] = 0.0

m = 2
mtxf = np.asmatrix(np.zeros(shape=(3,3)))
for i in xrange(it):
    for j in xrange(m):
        w2 = mtxq[1,j]/mtxq[0,j]
        w3 = mtxq[2,j]/mtxq[0,j]
        # f[0][0] = 0.0
        mtxf[0,1] = 1.0
        # f[0][2] = 0.0
        mtxf[1,0] = -a3*w2**2
        mtxf[1,1] = a2*w2
        mtxf[1,2] = ga - 1.0
        mtxf[2,0] = a1*w2**3 - ga*w2*w3
        mtxf[2,1] = ga*w3 - a1*w2**2
        mtxf[2,2] = ga*w2

        mtxqt[:,j] = -1.0*mtxf*mtxqx[:,j]
        mtxs[:,j] = qdx*mtxqx[:,j] + dtx*mtxf*mtxq[:,j] - dtx*qdt*mtxf*mtxf*mtxqx[:,j]

    mm = m - 1
    for j in xrange(mm):
        mtxqn[:,j+1] = 0.5*(mtxq[:,j] + mtxq[:,j+1] + mtxs[:,j] - mtxs[:,j+1]) # why?
        vxl = np.asarray((mtxqn[:,j+1] - mtxq[:,j] - hdt*mtxqt[:,j])/hdx)
        vxr = np.asarray((mtxq[:,j+1] + hdt*mtxqt[:,j+1] - mtxqn[:,j+1])/hdx) # why?
        mtxqx[:,j+1] = np.asmatrix((vxl*((abs(vxr))**ia) + vxr*((abs(vxl))**ia))/(((abs(vxl))**ia) + ((abs(vxr))**ia) + 1.0E-60))

    for j in xrange(1,m):
        mtxq[:,j] = mtxqn[:,j]

    m = m + 1

t2 = dx*float(itp)
xx[0] = -0.5*t2
for i in xrange(itp):
    xx[i+1] = xx[i] + dx

for i in xrange(m):
    x = mtxq[1,i]/mtxq[0,i]
    z = a1*(mtxq[2,i] - 0.5*(x**2)*mtxq[0,i])
    print('%f %f %f %f' % (xx[i],mtxq[0,i],x,z))

